@use "sass:math";

$brand: $blue;

:root,
.theme-dark,
.theme-light,
// this changes the "create a server popout"
div[class^="layerContainer"] {
  --background-primary: #{$base};
  --background-secondary: #{$mantle};
  --background-secondary-alt: #{darken($mantle, 2%)};
  --background-tertiary: #{$crust};
  --background-accent: #{$brand};

  --background-floating: #{darken($base, 3%)};
  --background-mentioned: #{adjust-color($brand, $alpha: -0.8)};
  --background-mentioned-hover: #{adjust-color($brand, $alpha: -0.85)};
  --background-modifier-accent: #{adjust-color($brand, $alpha: -0.75)};
  --background-modifier-active: #{adjust-color($text, $alpha: -0.84)};
  --background-modifier-hover: #{adjust-color($brand, $alpha: -0.92)};
  --background-modifier-selected: #{adjust-color($brand, $alpha: -0.76)};

  --activity-card-background: #{$base};
  --interactive-normal: #{$text};
  --interactive-muted: #{adjust-color($text, $alpha: -0.7)};
  --interactive-hover: #{$text};
  --interactive-active: #{$text};
  --channels-default: #{$subtext0};
  --channel-icon: #{$subtext0};
  --channeltextarea-background: #{$mantle};
  --channel-text-area-placeholder: #{adjust-color($text, $alpha: -0.5)};

  --input-background: #{$crust};
  --input-placeholder-text: #{$subtext0};
  --modal-background: #{$base};

  --button-positive-background: #{$green};
  --button-positive-background-disabled: #{adjust-color($green, $alpha: -0.6)};
  --button-positive-background-active: #{darken($green, 8%)};
  --button-positive-background-hover: #{darken($green, 10%)};

  --button-secondary-background: #{$brand};
  --button-secondary-background-disabled: #{$crust};
  --button-secondary-background-active: #{darken($brand, 8%)};
  --button-secondary-background-hover: #{darken($brand, 10%)};

  --rs-online-color: #{$green};
  --rs-idle-color: #{$peach};
  --rs-dnd-color: #{$red};
  --rs-offline-color: #{$overlay0};
  --rs-invisible-color: #{$rosewater};
  --rs-streaming-color: #{$mauve};

  --button-danger-background: #{$red};
  --info-danger-background: #{$red};
  --info-danger-foreground: #{$text};
  --status-danger-background: #{$red};
  --status-danger-text: #{$text};
  --status-danger: #{$red};
  --status-warning: #{$peach};

  --info-warning-background: #{$peach};
  --info-warning-foreground: #{$crust};
  --info-warning-text: #{$base};

  --info-positive-text: #{$base};
  --info-positive-background: #{$green};
  --info-positive-foreground: #{$crust};

  --info-danger-text: #{$crust};
  --info-danger-background: #{$red};
  --info-danger-foreground: #{$crust};
  --info-help-text: #{$sapphire};
  --info-help-background: #{$mantle};
  --info-help-foreground: #{$crust};

  --status-warning-background: #{$peach};
  --status-positive-background: #{$green};
  --status-positive-text: #{$base};
  --status-positive: #{$green};

  --header-primary: #{$text};
  --header-secondary: #{darken($text, 6%)};
  --text-normal: #{$text};
  --text-muted: #{$subtext0};
  --text-link: #{$blue};
  --text-link-low-saturation: #{$sapphire};
  --text-positive: #{$green};
  --text-warning: #{$peach};
  --text-danger: #{$red};
  --text-brand: #{$brand};

  // weighted brand colors
  --brand-experiment: #{$brand};
  --brand-experiment-100: #{lighten($brand, math.div(90%, 2))};
  --brand-experiment-130: #{lighten($brand, math.div(85%, 2))};
  --brand-experiment-160: #{lighten($brand, math.div(80%, 2))};
  --brand-experiment-200: #{lighten($brand, math.div(75%, 2))};
  --brand-experiment-230: #{lighten($brand, math.div(70%, 2))};
  --brand-experiment-260: #{lighten($brand, math.div(65%, 2))};
  --brand-experiment-300: #{lighten($brand, math.div(60%, 2))};
  --brand-experiment-330: #{lighten($brand, math.div(50%, 2))};
  --brand-experiment-360: #{lighten($brand, math.div(40%, 2))};
  --brand-experiment-400: #{lighten($brand, math.div(30%, 2))};
  --brand-experiment-430: #{lighten($brand, math.div(20%, 2))};
  --brand-experiment-460: #{lighten($brand, math.div(10%, 2))};
  --brand-experiment-500: #{$brand};
  --brand-experiment-530: #{darken($brand, math.div(10%, 2))};
  --brand-experiment-560: #{darken($brand, math.div(20%, 2))};
  --brand-experiment-600: #{darken($brand, math.div(30%, 2))};
  --brand-experiment-630: #{darken($brand, math.div(40%, 2))};
  --brand-experiment-660: #{darken($brand, math.div(50%, 2))};
  --brand-experiment-700: #{darken($brand, math.div(60%, 2))};
  --brand-experiment-730: #{darken($brand, math.div(65%, 2))};
  --brand-experiment-760: #{darken($brand, math.div(70%, 2))};
  --brand-experiment-800: #{darken($brand, math.div(75%, 2))};
  --brand-experiment-830: #{darken($brand, math.div(80%, 2))};
  --brand-experiment-860: #{darken($brand, math.div(85%, 2))};
  --brand-experiment-900: #{darken($brand, math.div(90%, 2))};
  // similar to other brand colors, except alpha only
  --brand-experiment-05a: #{adjust-color($brand, $alpha: -0.95)};
  --brand-experiment-10a: #{adjust-color($brand, $alpha: -0.9)};
  --brand-experiment-15a: #{adjust-color($brand, $alpha: -0.85)};
  --brand-experiment-20a: #{adjust-color($brand, $alpha: -0.8)};
  --brand-experiment-25a: #{adjust-color($brand, $alpha: -0.75)};
  --brand-experiment-30a: #{adjust-color($brand, $alpha: -0.7)};
  --brand-experiment-35a: #{adjust-color($brand, $alpha: -0.65)};
  --brand-experiment-40a: #{adjust-color($brand, $alpha: -0.6)};
  --brand-experiment-45a: #{adjust-color($brand, $alpha: -0.55)};
  --brand-experiment-50a: #{adjust-color($brand, $alpha: -0.5)};
  --brand-experiment-55a: #{adjust-color($brand, $alpha: -0.45)};
  --brand-experiment-60a: #{adjust-color($brand, $alpha: -0.4)};
  --brand-experiment-65a: #{adjust-color($brand, $alpha: -0.35)};
  --brand-experiment-70a: #{adjust-color($brand, $alpha: -0.3)};
  --brand-experiment-75a: #{adjust-color($brand, $alpha: -0.25)};
  --brand-experiment-80a: #{adjust-color($brand, $alpha: -0.2)};
  --brand-experiment-85a: #{adjust-color($brand, $alpha: -0.15)};
  --brand-experiment-90a: #{adjust-color($brand, $alpha: -0.1)};
  --brand-experiment-95a: #{adjust-color($brand, $alpha: -0.05)};

  // scrollbars
  --scrollbar-thin-thumb: #{$brand};
  --scrollbar-thin-track: transparent;
  --scrollbar-auto-thumb: #{$brand};
  --scrollbar-auto-track: #{$mantle};
  --scrollbar-auto-scrollbar-color-track: #{$brand};
  --scrollbar-auto-scrollbar-color-thumb: #{$mantle};

  --status-warning-text: hotpink;

  --deprecated-card-bg: #{$mantle};
  --deprecated-card-editable-bg: #{$mantle};
  --deprecated-store-bg: #{$mantle};
  --deprecated-quickswitcher-input-background: #{$mantle};
  --deprecated-quickswitcher-input-placeholder: #{$subtext0};
  --deprecated-text-input-bg: #{$mantle};
  --deprecated-text-input-border: #{$crust};
  --deprecated-text-input-border-hover: #{$mantle};
  --deprecated-text-input-border-disabled: #{$crust};
  --deprecated-text-input-prefix: #{$subtext0};
}

// online
rect[fill^="hsl(139"],
foreignObject[mask="url(#svg-mask-status-online)"] > div {
  fill: $green !important;
  background-color: $green !important;
}
// away
rect[fill^="hsl(38"],
foreignObject[mask="url(#svg-mask-status-idle)"] > div {
  fill: $yellow !important;
  background-color: $yellow !important;
}
// dnd
rect[fill^="hsl(359"],
foreignObject[mask="url(#svg-mask-status-dnd)"] > div {
  fill: $red !important;
  background-color: $red !important;
}
// offline
rect[fill^="hsl(214"],
foreignObject[mask="url(#svg-mask-status-offline)"] > div {
  fill: $subtext0 !important;
  background-color: $subtext0 !important;
}
// dots in typing
svg[class^="cursorDefault-"] svg[class^="dots-"] circle {
  fill: $base !important;
}

// settings > registered games
div[class*="activeGame-"][class*="nowPlaying"] * {
  color: $base !important;
}

// discovery
div[class^="pageWrapper-"] {
  background: $base !important;
}
// public server home
div[class^="homeContainer-"] {
  background: $base !important;
  > div[class^="homeContent-"] div[class*="card-"] {
    background: $surface0 !important;
  }
}
// the header for the public server home
section[class^="title-"] {
  background: $mantle !important;
}

// this one is e.g. when connecting to voice on a different client
div[class^="notice-"][class*="colorWarning-"] {
  background: $peach !important;
}
// notice when you have to complete steps befoer talking in a server
div[class^="notice-"] {
  background: $blue !important;
  * {
    color: $crust !important;
    border-color: $crust !important;
  }
}

// inbox
div[class*="recentMentionsPopout"] {
  div[class^="tabBar"] div[class^="tab"][class*="active-"] {
    color: $base !important;
  }
}

// beta badge, other similarly blue/burple badges
div[class^="textBadge-"][style*="background-color: hsl(235, "] {
  background-color: $brand !important;
  color: $base !important;
}

// nitro icon
div[class^="premiumLabel-"] svg * {
  fill: $brand !important;
}

// gift inventory, others
*[style*="background-color: var(--status-danger)"] {
  color: $base !important;
}

// buttons in calls
button {
  &[class*="white"] {
    background: $surface0 !important;
    svg * {
      fill: $text !important;
    }
  }
  &[class*="primaryDark"] {
    background: $base !important;
    svg * {
      fill: $text !important;
    }
  }
  &[class*="red"] {
    background: $red !important;
    svg * {
      fill: $base !important;
    }
  }
}

// in DM -> select friends for group DM
div[class*="friendSelected"] {
  background: $surface0 !important;
}

// video chat
div[class*="videoGrid-"],
div[class^="callContainer-"] > div[class^="root-"] {
  background: $crust !important;
}

// discord forums
// background
div[class^="chat"] > div[class^="content-"] > div[class^="container-"] {
  background-color: $base;

  div[class*="mainCard-"] {
    background-color: $surface0;
  }
}
div[class^="sidebar-"] > section[class^="panels-"] {
  svg[class*="buttonIcon-"],
  div[class*="buttonContents"] {
    fill: $text !important;
    color: $text !important;
  }
}

// selected server / discord logo wrapper
.wrapper-1BJsBx.selected-bZ3Lue > div[class^="childWrapper"] {
  background-color: $rosewater !important;
}

//-- buttons
// buttons are crust
button[class*="lookFilled"]:not([disabled]) {
  color: #{$crust} !important;
}
// buttons are crust
button[class*="lookFilled"]:disabled {
  color: #{$text} !important;
}

// -- and have $text foreground when inside the chat window (bots)
div[class^="chat"] {
  button[class*="lookFilled"] {
    color: #{$text} !important;
    background-color: #{$crust} !important;
  }
}

// Voice & Audio checks
section[class^="inputSensitivityToggle-"] {
  div[class*="speaking-"] {
    background: $green !important;
  }
}

div[class*="reactionMe-"] {
  background-color: #{$surface0} !important;
}

// boost background
div[class^="root"] > div[class^="perksModal"] {
  background-color: $base !important;
}

// autocomplete chat textboxes
div[class*="autocomplete-"] {
  background-color: #{$mantle} !important;

  div[class*="categoryHeader"] {
    background-color: #{$mantle} !important;
  }
  div[class*="autocompleteRowSubheading"] {
    background-color: transparent;
  }
  div[class*="autocompleteRowContentSecondary"] {
    background-color: transparent;
  }
  div[class^="usageWrapper-"] > div[class*="title-"] {
    color: $brand !important;
  }
}

// keybinds in preferences
div[class^="keybindShortcut"] {
  > span {
    color: #{$mantle} !important;
  }
  svg * {
    fill: #{$mantle} !important;
  }
}

button[class*="colorRed"] {
  background-color: $red !important;
  border-color: darken($red, 2%) !important;
  color: $crust !important;
}

// toggles in preferencs
// checked
div[class^="control"] > div[class*="checked"] {
  background-color: #{$green} !important;
}
// unchecked
div[class^="control"] > div {
  background-color: #{$surface1} !important;
}
// don't make it target the fourm channel area
[data-list-id^="forum-channel-list"] div[class^="control"] > div {
  background-color: unset !important;
}
// colorBrandNew bs
*[class*="colorBrandNew"] {
  background-color: #{$brand} !important;
}

// popouts
div[class^="layerContainer"] {
  // right-click popups for guild, channels, and user
  #guild-header-popout,
  #guild-context,
  div[id^="channel-context"],
  div[id^="user-context"] {
    background: $crust !important;

    // hide the scroller, as it's the wrong color
    // -- making the tracker transparent is enough
    // -- hiding the scroller removes padding
    div[class^="scroller"] {
      overflow: hidden scroll !important;
    }
  }

  > div[class^="layer"] {
    // search popout
    div[role="listbox"] {
      background-color: $mantle !important;
    }

    div[class^="focusLock"] {
      // create channel (modal) and stream popout (modalSize)
      div[class^="modal-"],
      div[class^="modalSize-"] {
        background-color: $mantle !important;
        li,
        p,
        span {
          color: $text !important;
        }
      }
      // their respective footers
      div[class*="footer"] {
        background-color: $crust !important;
      }

      // feature headers
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        &[class^="fixed-"] {
          &:after {
            background-color: $red !important;
          }
          color: $red !important;
        }
      }

      div[class*="message-"] {
        background-color: $surface0 !important;
      }

      // reaction popout
      div[class^="reactors"] {
        background-color: var(--background-primary);
      }
      div[class^="scroller"] {
        background-color: var(--background-secondary);
      }
      div[class*="reactorDefault"] {
        -webkit-box-shadow: inset 0 -1px 0 var(--background-modifier-accent) !important;
        box-shadow: inset 0 -1px 0 var(--background-modifier-accent) !important;
      }
      div[class*="reactionSelected"] {
        background-color: var(--background-modifier-selected) !important;
      }
    }
  }

  // add game
  div[class^="addGamePopout-"] {
    background-color: $mantle !important;
  }

  div[class*="searchOption-"]::after,
  div[class*="option-"]::after,
  li[class*="option-"]::after {
    display: none;
  }

  div[class^="queryContainer"] {
    background-color: $crust;
    span[class^="key"] {
      color: $text !important;
      background-color: $base !important;
    }
  }

  // make menu items readable when hovered
  [role="menu"] {
    --brand-experiment-560: var(--brand-experiment-25a);

    [class*="colorDefault"][class*="focused"] {
      &:not([class*="colorDanger"]),
      [class*="checkbox-"] {
        color: var(--interactive-normal) !important;
      }
    }

    [class*="colorDanger"][class*="focused"],
    [class*="colorDefault"][class*="focused"] [class*="check-"] {
      color: var(--background-floating) !important;
    }
  }
}

div[class*="date-"] {
  color: $brand !important;
}

// 'peopleList' background, friendslist, is not set via the variable
div[class^="base"] > div[class^="content"] > div[class^="container"] {
  background-color: $base !important;
}

// the thin line in front of @ mentioned messages
div[class*="mentioned"]::before {
  background-color: adjust-color($brand, $alpha: -0.25) !important;
}

// server folder settings
div[class^="focusLock"] {
  > div[class^="root"] {
    background-color: $base !important;

    > div[class*="footer"] {
      background-color: $mantle !important;
    }
  }
}

// upload modal
div[class^="uploadModal"] {
  background-color: $base !important;

  > div[class^="footer"] {
    background-color: $mantle !important;
  }
}

// 'Add a server' popup - this uses the light theme by default.
// only the footer doesn't use css variables as of now.
.theme-light {
  color: $text !important;

  > div[class^="focusLock"]
    > div[class^="root"]
    > div[class^="container"]
    div[class*="footer"] {
    background-color: $mantle !important;
  }
}

// server list icons
div[class^="upperBadge"] {
  > div[class^="iconBadge"] path {
    color: $base !important;
  }
  div[class*="participating-"] {
    background: $green !important;
  }
}

div[class^="uploadIcon"] > div > svg > circle {
  fill: $brand !important;
}

// verified badges
div[class*="flowerStarContainer-"] {
  svg[class*="flowerStar-"] * {
    fill: $green !important;
  }
  div[class^="childContainer-"] svg * {
    fill: $base !important;
  }
}

// new message ruler
main[class^="chatContent"] {
  #---new-messages-bar {
    border-color: $red;
    span {
      background-color: $red;
      color: $crust;
      border-color: $red;
    }
    svg * {
      fill: $red;
      stroke: $red;
    }
  }
  div[class^="attachedBars-"] {
    div[class*="label-"] {
      color: $base !important;
    }
  }
}

// spoiler messages
span[class^="spoilerText"] {
  &[aria-expanded="false"] {
    background-color: $surface2 !important;
  }
  &[aria-expanded="true"] {
    background-color: $surface0 !important;
  }
}

// user roles
div[class*="rolesList"] {
  div[class^="role"] {
    background-color: $crust !important;
  }
}

// add account modal + cards
form[class*="card-"] {
  background-color: $base !important;
}

// streaming badge
div[class*="liveShapeRound-"] {
  background-color: $red !important;
  color: $base !important;
}

// rainbow threads
ul[aria-label$=" threads"] > li:nth-child(1n) {
  --channels-default: #{mix($red, $text, 30%)};
  --interactive-hover: #{$red};
  --interactive-active: #{$red};
}
ul[aria-label$=" threads"] > li:nth-child(2n) {
  --channels-default: #{mix($peach, $text, 30%)};
  --interactive-hover: #{$peach};
  --interactive-active: #{$peach};
}
ul[aria-label$=" threads"] > li:nth-child(3n) {
  --channels-default: #{mix($yellow, $text, 30%)};
  --interactive-hover: #{$yellow};
  --interactive-active: #{$yellow};
}
ul[aria-label$=" threads"] > li:nth-child(4n) {
  --channels-default: #{mix($green, $text, 30%)};
  --interactive-hover: #{$green};
  --interactive-active: #{$green};
}
ul[aria-label$=" threads"] > li:nth-child(5n) {
  --channels-default: #{mix($blue, $text, 30%)};
  --interactive-hover: #{$sapphire};
  --interactive-active: #{$sapphire};
}
ul[aria-label$=" threads"] > li:nth-child(6n) {
  --channels-default: #{mix($mauve, $text, 30%)};
  --interactive-hover: #{$mauve};
  --interactive-active: #{$mauve};
}

// emoji button
button[class*="emojiButtonNormal"] > div > div {
  filter: grayscale(0.88) hue-rotate(170deg) contrast(0.9) !important;
}
button[class*="emojiButtonHovered"] {
  background: transparent !important;
}
button[class*="emojiButtonHovered"] > div > div {
  filter: unset !important;
}

// public / verified server info pill
div[class^="communityInfoPill"] {
  color: $base !important;
  div[class^="text"] {
    font-weight: 500 !important;
  }
}

// "spine" svgs before threads
svg[class^="spine-"] {
  color: $surface2 !important;
}

// the "guilds" / "server" icon sidebar
nav[class*="guilds-"] {
  // server icons
  foreignObject > div[data-list-item-id^="guildsnav_"] {
    &:hover,
    &[class*="selected"] {
      > div[class^="childWrapper-"] {
        color: var(--background-primary) !important;
        font-weight: 600 !important;
      }
    }
  }
}

// bot tag in sidebar
[class^="botText"] {
  color: $crust !important;
  font-weight: 600;
}
svg[class^="botTagVerified"] {
  color: $crust !important;
}

// server booster page
div[class^="perksModal"] {
  li[class^="perk"] {
    background-color: $mantle !important;

    svg {
      color: $pink !important;
    }
  }

  svg[class^="giftIcon"] {
    color: $crust !important;
  }

  div[class^="tierHeaderUnlocked"] {
    background-image: linear-gradient(90deg, $blue, $mauve) !important;
    color: $base !important;
  }

  div[class^="tierUnlocked"],
  div[class^="tierMarkerBackground"] {
    background-color: $base !important;
  }

  div[class^="barBackground"],
  div[class^="tierMarkerInProgress"],
  div[class^="tierBody"] {
    background-color: $crust !important;
  }

  div[class^="tierMarkerInProgress"] [class^="currentTierIcon"] {
    color: $pink !important;
  }

  div[class^="barForeground"],
  div[class^="tierMarkerAccomplished"] {
    background-color: $pink !important;
  }

  svg[class^="currentTierIcon"] {
    color: $base !important;
  }

  div[class*="tierMarkerLabelText"],
  svg[class^="tierLock"] {
    color: var(--text-muted) !important;
  }

  div[class*="selectedTier"] div[class*="tierMarkerLabelText"] {
    color: var(--text-normal) !important;
  }

  div[class^="tierHeaderLocked"] {
    background-color: darken($crust, 5%) !important;
    color: var(--text-muted) !important;
  }

  svg[class*="unlocked"] {
    color: $green !important;
  }
}

// boost icon
svg[class^="premiumIcon"],
#guild-header-popout-premium-subscribe svg,
svg[class^="badgeIconWithSubscribers"] {
  color: $pink !important;
}

// boost progress bar
div[class^="sidebar-"] div[class^="progressBar-"] {
  background: linear-gradient(90deg, $blue, $mauve) !important;
}

// fix selected nitro tab on sidebar
div[class^="sidebarRegion-"] div[class^="premiumTab-"] > [class*="selected"] {
  color: $mantle !important;
}

// cooldown text
div[class^="cooldownWrapper-"] {
  color: var(--text-muted) !important;
}

// highlight.js
.hljs-bullet,
.hljs-link,
.hljs-meta,
.hljs-meta.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-subst,
.hljs-symbol {
  color: #{$peach};
}
.hljs-attr,
.hljs-attribute,
.hljs-class.hljs-title,
.hljs-class .hljs-title,
.hljs-template-variable,
.hljs-type,
.hljs-variable {
  color: #{$yellow};
}
.hljs-built_in,
.hljs-deletion {
  color: #{$maroon};
}
.hljs-doctag,
.hljs-literal,
.hljs-meta.hljs-meta-string,
.hljs-meta .hljs-meta-string,
.hljs-number,
.hljs-regexp,
.hljs-string {
  color: #{$teal};
}
.hljs-addition,
.hljs-keyword,
.hljs-selector-tag {
  color: #{$green};
}
.hljs-name,
.hljs-section,
.hljs-selector-class,
.hljs-selector-id,
.hljs-title {
  color: #{$blue};
}

@import "_catppuccin-server";
